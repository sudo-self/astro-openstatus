---
// Import necessary schemas and components
import { monitorsSchema } from "../utils/models.js";
import StatusBar from "../components/status-bar.astro";
import { ThemeScript } from 'astro-theme-toggle';

// Correct way to access environment variables
const env = import.meta.env;

// Define a type for the expected structure of monitor
type Monitor = {
  id: number;
  name: string; // Add other relevant properties from your schema
};

// Fetch the data from the API
let result: Monitor[] = []; // Explicitly type the result variable
try {
  const response = await fetch("https://api.openstatus.dev/v1/monitor", {
    headers: {
      "x-openstatus-key": env.API_KEY, // Use `env` correctly
    },
  });

  if (!response.ok) {
    console.error(`Error fetching monitors: ${response.statusText}`);
  } else {
    const data = await response.json();
    const r = monitorsSchema.parse(data);
    
    // Filter by specific monitor IDs
    const monitorIds = [2026, 2027, 2028];
    result = r.filter((m: Monitor) => monitorIds.includes(m.id)); // Ensure type is consistent
  }
} catch (error) {
  console.error("Failed to fetch monitor data:", error);
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="status page">
    <title>Status Page</title>
    <ThemeScript />
  </head>
  <body class="flex min-h-screen w-full flex-col p-4 md:p-8">
    <main class="flex h-full w-full flex-1 flex-col gap-4 mx-auto max-w-sm">
      <div class="mx-auto flex w-full flex-col gap-6">
        <div class="col-span-full flex items-start justify-between">
          <div class="flex w-full flex-col gap-4">
            <div>
              <h1 class="font-cal text-3xl">Domains</h1>
              <p class="text-gray-600">status.JesseJesse.xyz</p>
            </div>
            <div class="grid gap-2">
              {result.length > 0
                ? result.map((monitor) => <StatusBar {...monitor} />)
                : <p class="text-red-500">No monitors found or failed to fetch data.</p>}
            </div>
          </div>
        </div>
      </div>
      <footer>
        <p class="text-gray-600 text-center text-sm">
          Astro web&nbsp;&#10085;
          <a
            href="https://jesse.openstatus.dev"
            target="_blank"
            rel="noreferrer"
            class="text-gray-900 underline underline-offset-4 hover:no-underline"
          >
            Jesse.openstatus.dev
          </a>
        </p>
      </footer>
    </main>

    <button id="theme-toggle" class="fixed top-4 left-1/2 transform -translate-x-1/2">
      <svg class="icon-moon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon">
        <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"/>
      </svg>
      <svg class="icon-sun" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sun">
        <circle cx="12" cy="12" r="4"/>
        <path d="M12 2v2"/>
        <path d="M12 20v2"/>
        <path d="m4.93 4.93 1.41 1.41"/>
        <path d="m17.66 17.66 1.41 1.41"/>
        <path d="M2 12h2"/>
        <path d="M20 12h2"/>
        <path d="m6.34 17.66-1.41 1.41"/>
        <path d="m19.07 4.93-1.41 1.41"/>
      </svg>
    </button>

    <script>
      import { handleToggleClick } from 'astro-theme-toggle';
      document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
    </script>

    <style is:global>
      .icon-sun {
        display: block;
      }
      .icon-moon {
        display: none;
      }
      .dark .icon-sun {
        display: none;
      }
      .dark .icon-moon {
        display: block;
      }
    </style>
  </body>
</html>

